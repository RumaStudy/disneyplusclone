{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\disneyplus\\\\src\\\\components\\\\GNB.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport LogoImg from \"../assets/img/GNB/logo.svg\";\n\n/* Library */\nimport { styled } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GNBWrap = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 3;\n  width: 100%;\n  height: 70px;\n  padding: 0 36px;\n  transition: ease-in-out 550ms;\n  letter-spacing: 16px;\n  color: white;\n  background-color: transparent;\n  &.show {\n    position: fixed;\n    top: 0;\n    left: 0;\n    background-color: #090b13;\n  }\n`;\n_c = GNBWrap;\nconst Logo = styled.a`\n  display: inline-block;\n  width: 80px;\n  max-height: 70px;\n  padding: 0;\n  margin-top: 4px;\n  font-size: 0;\n  cursor: pointer;\n  > img {\n    display: block;\n    width: 100%;\n  }\n`;\n_c2 = Logo;\nconst GNB = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 600) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n      return window.removeEventListener(\"scroll\", () => {}); // 해당 컴포넌트가 언마운트 되면 eventListener 제거\n    }, [] // 의존성 배열, 빈배열일 경우 마운트 이후 한 번 실행, 특정 값을 넣을 경우 해당 값의 변화 시 실행\n    );\n  });\n\n  return /*#__PURE__*/_jsxDEV(GNBWrap, {\n    className: show ? \"show\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(Logo, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LogoImg,\n        alt: \"Disney Plus Logo\",\n        onClick: () => {\n          window.location.href = \"/\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(GNB, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n_c3 = GNB;\nexport default GNB;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GNBWrap\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"GNB\");","map":{"version":3,"names":["React","useEffect","useState","LogoImg","styled","jsxDEV","_jsxDEV","GNBWrap","nav","_c","Logo","a","_c2","GNB","_s","show","setShow","window","addEventListener","scrollY","removeEventListener","className","children","src","alt","onClick","location","href","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/disneyplus/src/components/GNB.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport LogoImg from \"../assets/img/GNB/logo.svg\";\r\n\r\n/* Library */\r\nimport { styled } from \"styled-components\";\r\n\r\nconst GNBWrap = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 3;\r\n  width: 100%;\r\n  height: 70px;\r\n  padding: 0 36px;\r\n  transition: ease-in-out 550ms;\r\n  letter-spacing: 16px;\r\n  color: white;\r\n  background-color: transparent;\r\n  &.show {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #090b13;\r\n  }\r\n`;\r\nconst Logo = styled.a`\r\n  display: inline-block;\r\n  width: 80px;\r\n  max-height: 70px;\r\n  padding: 0;\r\n  margin-top: 4px;\r\n  font-size: 0;\r\n  cursor: pointer;\r\n  > img {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst GNB = () => {\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\r\n      \"scroll\",\r\n      () => {\r\n        if (window.scrollY > 600) {\r\n          setShow(true);\r\n        } else {\r\n          setShow(false);\r\n        }\r\n        return window.removeEventListener(\"scroll\", () => {}); // 해당 컴포넌트가 언마운트 되면 eventListener 제거\r\n      },\r\n      [] // 의존성 배열, 빈배열일 경우 마운트 이후 한 번 실행, 특정 값을 넣을 경우 해당 값의 변화 시 실행\r\n    );\r\n  });\r\n  return (\r\n    <GNBWrap className={show ? \"show\" : \"\"}>\r\n      <Logo>\r\n        <img\r\n          src={LogoImg}\r\n          alt=\"Disney Plus Logo\"\r\n          onClick={() => {\r\n            window.location.href = \"/\";\r\n          }}\r\n        />\r\n      </Logo>\r\n    </GNBWrap>\r\n  );\r\n};\r\n\r\nexport default GNB;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,4BAA4B;;AAEhD;AACA,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GArBIF,OAAO;AAsBb,MAAMG,IAAI,GAAGN,MAAM,CAACO,CAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAZIF,IAAI;AAcV,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACvCD,SAAS,CAAC,MAAM;IACdgB,MAAM,CAACC,gBAAgB,CACrB,QAAQ,EACR,MAAM;MACJ,IAAID,MAAM,CAACE,OAAO,GAAG,GAAG,EAAE;QACxBH,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,MAAM;QACLA,OAAO,CAAC,KAAK,CAAC;MAChB;MACA,OAAOC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,EACD,EAAE,CAAC;IACL,CAAC;EACH,CAAC,CAAC;;EACF,oBACEd,OAAA,CAACC,OAAO;IAACc,SAAS,EAAEN,IAAI,GAAG,MAAM,GAAG,EAAG;IAAAO,QAAA,eACrChB,OAAA,CAACI,IAAI;MAAAY,QAAA,eACHhB,OAAA;QACEiB,GAAG,EAAEpB,OAAQ;QACbqB,GAAG,EAAC,kBAAkB;QACtBC,OAAO,EAAEA,CAAA,KAAM;UACbR,MAAM,CAACS,QAAQ,CAACC,IAAI,GAAG,GAAG;QAC5B;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CA7BID,GAAG;AAAAmB,GAAA,GAAHnB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}